# --------------------------------------------------------
#  Copyright (C) 2004-2018 by EMGU Corporation. All rights reserved.
# --------------------------------------------------------

IF(HAVE_WINDESKTOP_X86 OR HAVE_WINDESKTOP_X64)  
  PROJECT(Emgu.TF.World)
  #Windows Desktop
  INSTALL(
    DIRECTORY
    ${CMAKE_CURRENT_SOURCE_DIR}
    DESTINATION .
    COMPONENT emgutf_source
    FILES_MATCHING 
    PATTERN "Emgu.TF.World.csproj"
    PATTERN ".svn" EXCLUDE
    PATTERN "obj" EXCLUDE
    PATTERN "CMakeFiles" EXCLUDE
	PATTERN "x64" EXCLUDE #exclude build artifacts from Visual Studio build process
    PATTERN "${PROJECT_NAME}.dir" EXCLUDE
    )
  SET(SRC_EMGU_TF_WORLD)
  FILE(GLOB_RECURSE SRC_EMGU_TF_UTIL RELATIVE ${CMAKE_CURRENT_SOURCE_DIR} "../Emgu.TF.Util/*.cs")
  LIST(APPEND SRC_EMGU_TF_WORLD ${SRC_EMGU_TF_UTIL})
  
  FILE(GLOB_RECURSE SRC_EMGU_TF RELATIVE ${CMAKE_CURRENT_SOURCE_DIR} "../Emgu.TF/*.cs")
  LIST(APPEND SRC_EMGU_TF_WORLD ${SRC_EMGU_TF})
  
  LIST(APPEND SRC_EMGU_TF_WORLD ${CMAKE_CURRENT_SOURCE_DIR}/../CommonAssemblyInfo.cs)
  LIST(APPEND SRC_EMGU_TF_WORLD ${CMAKE_CURRENT_SOURCE_DIR}/Properties/AssemblyInfo.cs)
  GENERATE_DOCUMENT(${LIBRARY_OUTPUT_PATH}/${PROJECT_NAME})
  SIGN_ASSEMBLY(${CMAKE_CURRENT_SOURCE_DIR}/../Emgu.TF.snk)
  SET_CS_TARGET_FRAMEWORK(${CSC_TARGET_FRAMEWORK})
  COMPILE_CS(${PROJECT_NAME} "library" "${SRC_EMGU_TF_WORLD}" ALL)
  
  INSTALL(
    FILES 
    ${LIBRARY_OUTPUT_PATH}/${PROJECT_NAME}.xml
    ${LIBRARY_OUTPUT_PATH}/${PROJECT_NAME}.dll 
    DESTINATION ${CPACK_PACKAGE_CLI_FOLDER}
    COMPONENT emgutf_binary)
  
ENDIF()


IF(WIN32 OR APPLE)
  INSTALL(
    DIRECTORY
    ${CMAKE_CURRENT_SOURCE_DIR}
    DESTINATION .
    COMPONENT emgutf_source
    FILES_MATCHING 
    
    PATTERN "*.cs"
    PATTERN "*.resx"
    PATTERN ".svn" EXCLUDE
    PATTERN "obj" EXCLUDE
    PATTERN "CMakeFiles" EXCLUDE
    PATTERN "${PROJECT_NAME}.dir" EXCLUDE
    )
ENDIF()  

IF(HAVE_IOS)
  #APPLE IOS
  INSTALL(
    DIRECTORY
    ${CMAKE_CURRENT_SOURCE_DIR}
    DESTINATION .
    COMPONENT emgutf_source
    FILES_MATCHING 
    PATTERN "${PROJECT_NAME}.iOS.csproj"
    PATTERN ".svn" EXCLUDE
    PATTERN "obj" EXCLUDE
    PATTERN "CMakeFiles" EXCLUDE
    PATTERN "${PROJECT_NAME}.dir" EXCLUDE
    )
  IF(APPLE)
    PROJECT(Emgu.TF.World.iOS)
    BUILD_CSPROJ(${PROJECT_NAME} "${CMAKE_CURRENT_SOURCE_DIR}/${PROJECT_NAME}.csproj" "" ALL)
    INSTALL(
      FILES 
      ${LIBRARY_OUTPUT_PATH}/ios/${PROJECT_NAME}.xml
      ${LIBRARY_OUTPUT_PATH}/ios/${PROJECT_NAME}.dll 
      DESTINATION ${CPACK_PACKAGE_CLI_FOLDER}
      COMPONENT emgutf_binary)
  ENDIF()	
ENDIF()

IF(HAVE_OSX)
  #APPLE OSX
  INSTALL(
    DIRECTORY
    ${CMAKE_CURRENT_SOURCE_DIR}
    DESTINATION .
    COMPONENT emgutf_source
    FILES_MATCHING 
    PATTERN "${PROJECT_NAME}.Unified.csproj"
    PATTERN ".svn" EXCLUDE
    PATTERN "obj" EXCLUDE
    PATTERN "CMakeFiles" EXCLUDE
    PATTERN "${PROJECT_NAME}.dir" EXCLUDE
    )
  IF(APPLE)
    PROJECT(Emgu.TF.World.OSX)
    #MESSAGE(STATUS "BUILD EMGU.TF.WORLD.OSX project")
    BUILD_CSPROJ(${PROJECT_NAME} "${CMAKE_CURRENT_SOURCE_DIR}/Emgu.TF.World.Unified.csproj" "" ALL)
    INSTALL(
      FILES 
      ${LIBRARY_OUTPUT_PATH}/osx/${PROJECT_NAME}.xml
      ${LIBRARY_OUTPUT_PATH}/osx/${PROJECT_NAME}.dll 
      DESTINATION ${CPACK_PACKAGE_CLI_FOLDER}
      COMPONENT emgutf_binary)
  ENDIF()	
ENDIF()

IF(HAVE_ANDROID)
  PROJECT(Emgu.TF.World.Android)
  INSTALL(
    DIRECTORY
    ${CMAKE_CURRENT_SOURCE_DIR}
    DESTINATION .
    COMPONENT emgutf_source
    FILES_MATCHING 
    PATTERN "*.Android.csproj"
    PATTERN ".svn" EXCLUDE
    PATTERN "obj" EXCLUDE
    PATTERN "CMakeFiles" EXCLUDE
    PATTERN "${PROJECT_NAME}.dir" EXCLUDE
    )
  BUILD_CSPROJ(${PROJECT_NAME} "${CMAKE_CURRENT_SOURCE_DIR}/${PROJECT_NAME}.csproj" "${EXTRA_BUILD_FLAGS}" ALL)
  INSTALL(
    FILES 
    ${LIBRARY_OUTPUT_PATH}/${PROJECT_NAME}.xml
    ${LIBRARY_OUTPUT_PATH}/${PROJECT_NAME}.dll 
    DESTINATION ${CPACK_PACKAGE_CLI_FOLDER}
    COMPONENT emgutf_binary)
ENDIF()