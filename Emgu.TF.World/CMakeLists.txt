# --------------------------------------------------------
#  Copyright (C) 2004-2017 by EMGU Corporation. All rights reserved.
# --------------------------------------------------------

PROJECT(Emgu.TF.World)

#include(CSharpMacros)


IF(APPLE AND HAVE_OSX)
  BUILD_CSPROJ(${PROJECT_NAME} "${CMAKE_CURRENT_SOURCE_DIR}/Emgu.TF.World.Unified.csproj" "")
  INSTALL(
    FILES 
    ${LIBRARY_OUTPUT_PATH}/osx/${PROJECT_NAME}.OSX.xml
    ${LIBRARY_OUTPUT_PATH}/osx/${PROJECT_NAME}.OSX.dll 
    DESTINATION ${CPACK_PACKAGE_CLI_FOLDER}
    COMPONENT emgutf_binary)
ENDIF()

IF(NETFX_CORE)
  
  SET(EXTRA_BINARY_NAME "")
  IF ("${EMGUTF_ARCH}" STREQUAL "win64")
    SET(EXTRA_BUILD_FLAGS "/p:Platform=x64")
    SET(EXTRA_BINARY_NAME ".x64")
  ELSEIF ("${EMGUTF_ARCH}" STREQUAL "win32")
    SET(EXTRA_BUILD_FLAGS "/p:Platform=x86")
    SET(EXTRA_BINARY_NAME ".x86")
  ELSEIF ("${EMGUTF_ARCH}" STREQUAL "arm")
    SET(EXTRA_BUILD_FLAGS "/p:Platform=ARM")
    SET(EXTRA_BINARY_NAME ".ARM")
  ENDIF()
  
  IF (("${CMAKE_SYSTEM_NAME}" STREQUAL "WindowsPhone") AND CMAKE_SYSTEM_VERSION MATCHES 8.1)
    BUILD_CSPROJ(${PROJECT_NAME} "${CMAKE_CURRENT_SOURCE_DIR}/Emgu.TF.World.Phone81.csproj" "${EXTRA_BUILD_FLAGS}" ALL)      
    INSTALL(
      FILES 
      ${LIBRARY_OUTPUT_PATH}/${PROJECT_NAME}.Phone81${EXTRA_BINARY_NAME}.xml
      ${LIBRARY_OUTPUT_PATH}/${PROJECT_NAME}.Phone81${EXTRA_BINARY_NAME}.dll 
      DESTINATION ${CPACK_PACKAGE_CLI_FOLDER}
      COMPONENT emgutf_binary)
    if(ENABLE_SOLUTION_FOLDERS)
      set_target_properties(${PROJECT_NAME} PROPERTIES FOLDER "emgu")
    endif()
    
    
  ELSEIF (("${CMAKE_SYSTEM_NAME}" STREQUAL "WindowsStore") AND CMAKE_SYSTEM_VERSION MATCHES 8.1)
   BUILD_CSPROJ(${PROJECT_NAME} "${CMAKE_CURRENT_SOURCE_DIR}/Emgu.TF.World.Store81.csproj" "${EXTRA_BUILD_FLAGS}" ALL)
    INSTALL(
      FILES 
      ${LIBRARY_OUTPUT_PATH}/${PROJECT_NAME}.Store81${EXTRA_BINARY_NAME}.xml
      ${LIBRARY_OUTPUT_PATH}/${PROJECT_NAME}.Store81${EXTRA_BINARY_NAME}.dll 
      DESTINATION ${CPACK_PACKAGE_CLI_FOLDER}
      COMPONENT emgutf_binary)
    if(ENABLE_SOLUTION_FOLDERS)
      set_target_properties(${PROJECT_NAME} PROPERTIES FOLDER "emgu")
    endif()
    
    
  ENDIF()
  
ENDIF()
  
  
IF(WIN32)  
  SET(SRC_EMGU_TF_WORLD)
  FILE(GLOB_RECURSE SRC_EMGU_TF_UTIL RELATIVE ${CMAKE_CURRENT_SOURCE_DIR} "../Emgu.TF.Util/*.cs")
  LIST(APPEND SRC_EMGU_TF_WORLD ${SRC_EMGU_TF_UTIL})

  FILE(GLOB_RECURSE SRC_EMGU_TF RELATIVE ${CMAKE_CURRENT_SOURCE_DIR} "../Emgu.TF/*.cs")
  LIST(APPEND SRC_EMGU_TF_WORLD ${SRC_EMGU_TF})

  LIST(APPEND SRC_EMGU_TF_WORLD ${CMAKE_CURRENT_SOURCE_DIR}/../CommonAssemblyInfo.cs)
  LIST(APPEND SRC_EMGU_TF_WORLD ${CMAKE_CURRENT_SOURCE_DIR}/Properties/AssemblyInfo.cs)
  GENERATE_DOCUMENT(${LIBRARY_OUTPUT_PATH}/${PROJECT_NAME})
  SIGN_ASSEMBLY(${CMAKE_CURRENT_SOURCE_DIR}/../Emgu.TF.snk)
  SET_CS_TARGET_FRAMEWORK(${CSC_TARGET_FRAMEWORK})
  COMPILE_CS(${PROJECT_NAME} "library" "${SRC_EMGU_TF_WORLD}" ALL)
  
  INSTALL(
    FILES 
    ${LIBRARY_OUTPUT_PATH}/${PROJECT_NAME}.xml
    ${LIBRARY_OUTPUT_PATH}/${PROJECT_NAME}.dll 
    DESTINATION ${CPACK_PACKAGE_CLI_FOLDER}
    COMPONENT emgutf_binary)
  if(ENABLE_SOLUTION_FOLDERS)
    set_target_properties(${PROJECT_NAME} PROPERTIES FOLDER "emgu")
  endif()
ENDIF()

IF(WIN32 OR APPLE)
  INSTALL(
    DIRECTORY
    ${CMAKE_CURRENT_SOURCE_DIR}
    DESTINATION .
    COMPONENT emgutf_source
    FILES_MATCHING 
    
    PATTERN "*.cs"
    PATTERN "*.resx"
    PATTERN ".svn" EXCLUDE
    PATTERN "obj" EXCLUDE
    PATTERN "CMakeFiles" EXCLUDE
    PATTERN "${PROJECT_NAME}.dir" EXCLUDE
    )
ENDIF()  

    IF(HAVE_ANDROID)
    INSTALL(
      DIRECTORY
      ${CMAKE_CURRENT_SOURCE_DIR}
      DESTINATION .
      COMPONENT emgutf_source
      FILES_MATCHING 
      PATTERN "*.Android.csproj"
      PATTERN ".svn" EXCLUDE
      PATTERN "obj" EXCLUDE
      PATTERN "CMakeFiles" EXCLUDE
      PATTERN "${PROJECT_NAME}.dir" EXCLUDE
      )
  ENDIF()
  IF(HAVE_IOS)
    #APPLE IOS
    INSTALL(
      DIRECTORY
      ${CMAKE_CURRENT_SOURCE_DIR}
      DESTINATION .
      COMPONENT emgutf_source
	FILES_MATCHING 
	PATTERN "${PROJECT_NAME}.iOS.csproj"
	PATTERN ".svn" EXCLUDE
	PATTERN "obj" EXCLUDE
	PATTERN "CMakeFiles" EXCLUDE
	PATTERN "${PROJECT_NAME}.dir" EXCLUDE
	)
    ENDIF()
    
    IF(HAVE_WINDESKTOP_X86 OR HAVE_WINDESKTOP_X64)
      #Windows Desktop
      INSTALL(
	DIRECTORY
	${CMAKE_CURRENT_SOURCE_DIR}
	DESTINATION .
	COMPONENT emgutf_source
	FILES_MATCHING 
	PATTERN "Emgu.TF.World.csproj"
	PATTERN ".svn" EXCLUDE
	PATTERN "obj" EXCLUDE
	PATTERN "CMakeFiles" EXCLUDE
	PATTERN "${PROJECT_NAME}.dir" EXCLUDE
	)
    ENDIF()
	
	  IF(HAVE_OSX)
    #APPLE OSX
    INSTALL(
      DIRECTORY
      ${CMAKE_CURRENT_SOURCE_DIR}
      DESTINATION .
      COMPONENT emgutf_source
	FILES_MATCHING 
	PATTERN "${PROJECT_NAME}.Unified.csproj"
	PATTERN ".svn" EXCLUDE
	PATTERN "obj" EXCLUDE
	PATTERN "CMakeFiles" EXCLUDE
	PATTERN "${PROJECT_NAME}.dir" EXCLUDE
	)
    ENDIF()
  
