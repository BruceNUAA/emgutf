<?xml version="1.0" encoding="utf-8"?>
<Project xmlns="http://schemas.microsoft.com/developer/msbuild/2003">
  <PropertyGroup>
    <MSBuildAllProjects>$(MSBuildAllProjects);$(MSBuildThisFileFullPath)</MSBuildAllProjects>
    <HasSharedItems>true</HasSharedItems>
    <SharedGUID>8f587fb9-bba6-4c30-9329-8cbac7020fe0</SharedGUID>
  </PropertyGroup>
  <PropertyGroup Label="Configuration">
    <Import_RootNamespace>Emgu.TF.Lite</Import_RootNamespace>
  </PropertyGroup>
  <ItemGroup>
    <Compile Include="$(MSBuildThisFileDirectory)*.cs" />
  </ItemGroup>
    <PropertyGroup>
    <TFLiteBinaryDir>$(MSBuildThisFileDirectory)..\lib</TFLiteBinaryDir>
    <EmguTFLiteDir>$(MSBuildThisFileDirectory)</EmguTFLiteDir>
  </PropertyGroup>
  <Choose>
    <!-- Windows 10 UWP (64bit) -->
    <When Condition="'$(TargetPlatformIdentifier)'=='UAP' AND '$(Platform)'=='x64'">
      <PropertyGroup>
        <EmguTFLiteLinkTarget>Windows 10 UWP (64bit)</EmguTFLiteLinkTarget>
        <EmguTFLiteErrorMessage Condition="!Exists('$(EmguTFLiteNativeFile)')"> This package do not support $(EmguTFLiteLinkTarget).</EmguTFLiteErrorMessage>
      </PropertyGroup>
    </When>
    <!-- Windows 10 UWP (32bit) -->
    <When Condition="'$(TargetPlatformIdentifier)'=='UAP' AND '$(Platform)'=='x86'">
      <PropertyGroup>
        <EmguTFLiteLinkTarget>Windows 10 UWP (32bit)</EmguTFLiteLinkTarget>
        <EmguTFLiteErrorMessage Condition="!Exists('$(EmguTFLiteNativeFile)')"> This package do not support $(EmguTFLiteLinkTarget).</EmguTFLiteErrorMessage>
      </PropertyGroup>
    </When>
    <!-- Windows 10 UWP (ARM) -->
    <When Condition="'$(TargetPlatformIdentifier)'=='UAP' AND '$(Platform)'=='ARM'">
      <PropertyGroup>
        <EmguTFLiteLinkTarget>Windows 10 UWP (ARM)</EmguTFLiteLinkTarget>
        <EmguTFLiteErrorMessage>This package do not support $(EmguTFLiteLinkTarget). </EmguTFLiteErrorMessage>
      </PropertyGroup>
    </When>
    <!-- Windows store 8.1 (64bit) -->
    <When Condition="'$(TargetPlatformVersion)'=='8.1' AND '$(Platform)'=='x64' AND  '$(IsTargetingWindowsPhonePlatform)'!='True' AND '$(ProjectTypeGuids)'!='{76F1466A-8B6D-4E39-A767-685A06062A39};{FAE04EC0-301F-11D3-BF4B-00C04F79EFBC}'">
      <PropertyGroup>
        <EmguTFLiteLinkTarget>Windows Store 8.1 (64bit)</EmguTFLiteLinkTarget>
        <EmguTFLiteErrorMessage>This package do not support $(EmguTFLiteLinkTarget).</EmguTFLiteErrorMessage>
      </PropertyGroup>
    </When>
    <!-- Windows store 8.1 (32bit) -->
    <When Condition="'$(TargetPlatformVersion)'=='8.1' AND '$(Platform)'=='x86' AND  '$(IsTargetingWindowsPhonePlatform)'!='True' AND '$(ProjectTypeGuids)'!='{76F1466A-8B6D-4E39-A767-685A06062A39};{FAE04EC0-301F-11D3-BF4B-00C04F79EFBC}'">
      <PropertyGroup>
        <EmguTFLiteLinkTarget>Windows Store 8.1 (32bit)</EmguTFLiteLinkTarget>
        <EmguTFLiteErrorMessage>This package do not support $(EmguTFLiteLinkTarget).</EmguTFLiteErrorMessage>
      </PropertyGroup>
    </When>
    <!-- Windows phone 8.1 (ARM) -->
    <When Condition="('$(TargetFrameworkVersion)'=='v8.1' OR '$(TargetPlatformVersion)'=='8.1') AND ('$(TargetFrameworkIdentifier)'=='WindowsPhone' OR '$(TargetPlatformIdentifier)'=='WindowsPhoneApp' OR '$(ProjectTypeGuids)'=='{76F1466A-8B6D-4E39-A767-685A06062A39};{FAE04EC0-301F-11D3-BF4B-00C04F79EFBC}')AND '$(Platform)'=='ARM'">
      <PropertyGroup>
        <EmguTFLiteLinkTarget>Windows Phone 8.1 (ARM)</EmguTFLiteLinkTarget>
        <EmguTFLiteErrorMessage>This package do not support $(EmguTFLiteLinkTarget).</EmguTFLiteErrorMessage>
      </PropertyGroup>
    </When>
    <!-- Windows phone 8.1 (x86) -->
    <When Condition="('$(TargetFrameworkVersion)'=='v8.1' OR '$(TargetPlatformVersion)'=='8.1') AND ('$(TargetFrameworkIdentifier)'=='WindowsPhone' OR '$(TargetPlatformIdentifier)'=='WindowsPhoneApp' OR '$(ProjectTypeGuids)'=='{76F1466A-8B6D-4E39-A767-685A06062A39};{FAE04EC0-301F-11D3-BF4B-00C04F79EFBC}') AND '$(Platform)'=='x86'">
      <PropertyGroup>
        <EmguTFLiteLinkTarget>Windows Phone 8.1 (x86)</EmguTFLiteLinkTarget>
        <EmguTFLiteErrorMessage>This package do not support $(EmguTFLiteLinkTarget).</EmguTFLiteErrorMessage>
      </PropertyGroup>
    </When>
    <!-- IOS -->
    <!-- IOS library project -->
    <When Condition="(('$(TargetFrameworkIdentifier)'=='Xamarin.iOS' OR '$(ProjectTypeGuids)'=='{8FFB629D-F513-41CE-95D2-7ECE97B6EEEC};{FAE04EC0-301F-11D3-BF4B-00C04F79EFBC}' OR '$(Platform)'=='iPhone' OR '$(Platform)'=='iPhoneSimulator') AND '$(OutputType)' != 'Exe')">
      <PropertyGroup>
        <EmguTFLiteLinkTarget>Xamarin iOS Native Binding Library</EmguTFLiteLinkTarget>
        <EmguTFLiteNativeFile>$(MSBuildThisFileDirectory)..\lib\ios\libtfliteextern.a</EmguTFLiteNativeFile>
        <EmguTFLiteErrorMessage Condition="!Exists('$(EmguTFLiteNativeFile)')"> This package do not contain necessary binary for $(EmguTFLiteLinkTarget). Emgu TF Lite for iOS Commercial License is required. Missing $(EmguTFLiteNativeFile) </EmguTFLiteErrorMessage>
        <EmguTFLiteDeployMessage Condition="Exists('$(EmguTFLiteNativeFile)')">$(EmguTFLiteDeployMessage)ios </EmguTFLiteDeployMessage>
        <EmguTFLiteLinkWithFile>$(MSBuildThisFileDirectory)ios\libtfliteextern.linkwith.cs</EmguTFLiteLinkWithFile>
        <EmguTFLiteErrorMessage Condition="!Exists('$(EmguTFLiteLinkWithFile)')"> This package do not contain necessary file for $(EmguTFLiteLinkTarget). Emgu TF Lite for iOS Commercial License is required. Missing $(EmguTFLiteLinkWithFile) </EmguTFLiteErrorMessage>
      </PropertyGroup>
      <ItemGroup>
        <ObjcBindingNativeLibrary Include="$(EmguTFLiteNativeFile)" Condition="Exists('$(EmguTFLiteNativeFile)')" />
      </ItemGroup>
      <ItemGroup>
        <Compile Include="$(EmguTFLiteLinkWithFile)" Condition="Exists('$(EmguTFLiteLinkWithFile)')">
          <DependentUpon>libtfliteextern.a</DependentUpon>
        </Compile>
      </ItemGroup>
    </When>
    <!-- Xamarin.Mac application -->
    <When Condition="'$(TargetFrameworkIdentifier)'=='Xamarin.Mac' OR '$(ProjectTypeGuids)'=='{810C163F-4746-4721-8B8E-88A3673A62EA};{FAE04EC0-301F-11D3-BF4B-00C04F79EFBC}' OR '$(ProjectTypeGuids)'=='{A3F8F2AB-B479-4A4A-A458-A89E7DC349F1};{FAE04EC0-301F-11D3-BF4B-00C04F79EFBC}'">
      <PropertyGroup>
        <EmguTFLiteLinkTarget>Xamarin.Mac</EmguTFLiteLinkTarget>
        <EmguTFLiteNativeFile>$(MSBuildThisFileDirectory)..\lib\osx\libtfliteextern.dylib</EmguTFLiteNativeFile>
        <EmguTFLiteErrorMessage Condition="!Exists('$(EmguTFLiteNativeFile)')"> This package do not contain necessary binary for $(EmguTFLiteLinkTarget). Emgu TF Litefor Mac Commercial License is required. Missing $(EmguTFLiteNativeFile) </EmguTFLiteErrorMessage>
        <EmguTFLiteDeployMessage Condition="Exists('$(EmguTFLiteNativeFile)')">$(EmguTFLiteDeployMessage)mac </EmguTFLiteDeployMessage>
      </PropertyGroup>
      <ItemGroup>
        <NativeReference Include="$(EmguTFLiteNativeFile)">
          <Kind>Dynamic</Kind>
          <SmartLink>False</SmartLink>
        </NativeReference>
      </ItemGroup>
    </When>
    <!-- IOS application (Note: do not work for Xamarin iOS for Visual Studio) -->
    <When Condition="(('$(TargetFrameworkIdentifier)'=='Xamarin.iOS' OR '$(ProjectTypeGuids)'=='{8FFB629D-F513-41CE-95D2-7ECE97B6EEEC};{FAE04EC0-301F-11D3-BF4B-00C04F79EFBC}' OR '$(Platform)'=='iPhone' OR '$(Platform)'=='iPhoneSimulator') AND '$(OutputType)' == 'Exe')">
      <PropertyGroup>
        <EmguTFLiteErrorMessage Condition="'$(BuildingInsideVisualStudio)'=='True' AND '$(OS)'=='Windows_NT'"> Direct reference of Emgu TF for Xamarin iOS is only available with Xamarin Studio or Visual Studio on Mac. When using Emgu TF in Visual Studio with Xamarin iOS plug in, please add the Emgu.TF.iOS.World reference instead.</EmguTFLiteErrorMessage>
        <EmguTFLiteLinkTarget>Xamarin iOS App</EmguTFLiteLinkTarget>
        <EmguTFLiteNativeFile>$(MSBuildThisFileDirectory)..\lib\ios\libtfliteextern.a</EmguTFLiteNativeFile>
        <EmguTFLiteErrorMessage Condition="!Exists('$(EmguTFLiteNativeFile)')"> This package do not contain necessary binary for $(EmguTFLiteLinkTarget). Emgu TF Lite for iOS Commercial License is required. Missing $(EmguTFLiteNativeFile) </EmguTFLiteErrorMessage>
        <MtouchExtraArgs>$(MtouchExtraArgs) -cxx -gcc_flags "-L$(MSBuildThisFileDirectory)..\lib\ios\ -ltfliteextern -framework Foundation -framework Accelerate -framework CoreFoundation -framework CoreGraphics -framework AssetsLibrary -framework AVFoundation -framework CoreImage -framework CoreMedia -framework CoreVideo -framework QuartzCore -framework ImageIO -force_load $(MSBuildThisFileDirectory)..\lib\ios\libtfliteextern.a"</MtouchExtraArgs>
        <EmguTFLiteDeployMessage Condition="Exists('$(EmguTFLiteNativeFile)')">$(EmguTFLiteDeployMessage)ios </EmguTFLiteDeployMessage>
      </PropertyGroup>
    </When>
    <!-- Android -->
    <When Condition="('$(AndroidSupportedAbis)'!='') OR '$(ProjectTypeGuids)'=='{EFBA0AD7-5A72-4C68-AF49-83D382785DCF};{FAE04EC0-301F-11D3-BF4B-00C04F79EFBC}'">
      <PropertyGroup>
        <EmguTFLiteLinkTarget Condition="('$(AndroidApplication)'=='True' OR '$(AndroidApplication)'=='true')">Xamarin Android App</EmguTFLiteLinkTarget>
        <EmguTFLiteLinkTarget Condition="!('$(AndroidApplication)'=='True' OR '$(AndroidApplication)'=='true')">Xamarin Android Library</EmguTFLiteLinkTarget>
        <!--
		<EmguTFLiteNativeArmeabi>$(TFLiteBinaryDir)\android\armeabi\libtfliteextern.so</EmguTFLiteNativeArmeabi>
        <EmguTFLiteBuildAndroidArmeabi Condition="$(AndroidSupportedAbis.Contains('armeabi%3')) OR $(AndroidSupportedAbis.Contains('armeabi,')) OR $(AndroidSupportedAbis.Contains('armeabi;')) OR $(AndroidSupportedAbis.EndsWith('armeabi')) OR ('$(AndroidSupportedAbis)'=='' AND '$(Platform)'=='AnyCPU') OR ('$(Platform)'=='armeabi')">True</EmguTFLiteBuildAndroidArmeabi>
        <EmguTFLiteErrorMessage Condition="'$(EmguTFLiteBuildAndroidArmeabi)'=='True' AND !Exists('$(EmguTFLiteNativeArmeabi)')">This package do not contain necessary binary for $(EmguTFLiteLinkTarget). Emgu TF Lite for Android Commercial License is required. Armeabi is targeted, but file $(EmguTFLiteNativeArmeabi) is missing.</EmguTFLiteErrorMessage>
        <EmguTFLiteDeployMessage Condition="'$(EmguTFLiteBuildAndroidArmeabi)'=='True' AND Exists('$(EmguTFLiteNativeArmeabi)')">$(EmguTFLiteDeployMessage)armeabi </EmguTFLiteDeployMessage>
		-->
        <EmguTFLiteNativeArmeabiv7a>$(TFLiteBinaryDir)\android\armeabi-v7a\libtfliteextern.so</EmguTFLiteNativeArmeabiv7a>
        <EmguTFLiteBuildAndroidArmeabiv7a Condition="$(AndroidSupportedAbis.Contains('armeabi-v7a%3')) OR $(AndroidSupportedAbis.Contains('armeabi-v7a,')) OR $(AndroidSupportedAbis.Contains('armeabi-v7a;')) OR $(AndroidSupportedAbis.EndsWith('armeabi-v7a')) OR ('$(AndroidSupportedAbis)'=='' AND '$(Platform)'=='AnyCPU') OR ('$(Platform)'=='armeabi-v7a')">True</EmguTFLiteBuildAndroidArmeabiv7a>
        <EmguTFLiteErrorMessage Condition="'$(EmguTFLiteBuildAndroidArmeabiv7a)'=='True' AND !Exists('$(EmguTFLiteNativeArmeabiv7a)')">This package do not contain necessary binary for $(EmguTFLiteLinkTarget). Emgu TF Lite for Android Commercial License is required. Armeabi-v7a is targeted, but file $(EmguTFLiteNativeArmeabiv7a) is missing.</EmguTFLiteErrorMessage>
        <EmguTFLiteDeployMessage Condition="'$(EmguTFLiteBuildAndroidArmeabiv7a)'=='True' AND Exists('$(EmguTFLiteNativeArmeabiv7a)')">$(EmguTFLiteDeployMessage)armeabi-v7a </EmguTFLiteDeployMessage>
        <EmguTFLiteNativeArm64v8a>$(TFLiteBinaryDir)\android\arm64-v8a\libtfliteextern.so</EmguTFLiteNativeArm64v8a>
        <EmguTFLiteBuildAndroidArm64v8a Condition="$(AndroidSupportedAbis.Contains('arm64-v8a%3')) OR $(AndroidSupportedAbis.Contains('arm64-v8a,')) OR $(AndroidSupportedAbis.EndsWith('arm64-v8a;')) OR $(AndroidSupportedAbis.EndsWith('arm64-v8a')) OR ('$(AndroidSupportedAbis)'=='' AND '$(Platform)'=='AnyCPU')  OR ('$(Platform)'=='arm64-v8a')">True</EmguTFLiteBuildAndroidArm64v8a>
        <EmguTFLiteErrorMessage Condition="'$(EmguTFLiteBuildAndroidArm64v8a)'=='True' AND !Exists('$(EmguTFLiteNativeArm64v8a)')">This package do not contain necessary binary for $(EmguTFLiteLinkTarget). Emgu TF Lite for Android Commercial License is required. Arm64-v8a is targeted, but file $(EmguTFLiteNativeArm64v8a) is missing.</EmguTFLiteErrorMessage>
        <EmguTFLiteDeployMessage Condition="'$(EmguTFLiteBuildAndroidArm64v8a)'=='True' AND Exists('$(EmguTFLiteNativeArm64v8a)')">$(EmguTFLiteDeployMessage)arm64-v8a </EmguTFLiteDeployMessage>
        <EmguTFLiteNativex86>$(TFLiteBinaryDir)\android\x86\libtfliteextern.so</EmguTFLiteNativex86>
        <EmguTFLiteBuildAndroidx86 Condition="$(AndroidSupportedAbis.Contains('x86%3')) OR $(AndroidSupportedAbis.Contains('x86,')) OR $(AndroidSupportedAbis.Contains('x86;')) OR $(AndroidSupportedAbis.EndsWith('x86')) OR ('$(AndroidSupportedAbis)'=='' AND '$(Platform)'=='AnyCPU') OR ('$(Platform)'=='x86')">True</EmguTFLiteBuildAndroidx86>
        <EmguTFLiteErrorMessage Condition="'$(EmguTFLiteBuildAndroidx86)'=='True' AND !Exists('$(EmguTFLiteNativex86)')">This package do not contain necessary binary for $(EmguTFLiteLinkTarget). Emgu TF Lite for Android Commercial License is required. x86 is targeted, but file $(EmguTFLiteNativex86) is missing.</EmguTFLiteErrorMessage>
        <EmguTFLiteDeployMessage Condition="'$(EmguTFLiteBuildAndroidx86)'=='True' AND Exists('$(EmguTFLiteNativex86)')">$(EmguTFLiteDeployMessage)x86 </EmguTFLiteDeployMessage>
        <EmguTFLiteNativex8664>$(TFLiteBinaryDir)\android\x86_64\libtfliteextern.so</EmguTFLiteNativex8664>
        <EmguTFLiteBuildAndroidx8664 Condition="$(AndroidSupportedAbis.Contains('x86_64%3')) OR $(AndroidSupportedAbis.Contains('x86_64,')) OR $(AndroidSupportedAbis.Contains('x86_64;')) OR $(AndroidSupportedAbis.EndsWith('x86_64')) OR ('$(AndroidSupportedAbis)'=='' AND '$(Platform)'=='AnyCPU') OR ('$(Platform)'=='x86_64')">True</EmguTFLiteBuildAndroidx8664>
        <EmguTFLiteErrorMessage Condition="'$(EmguTFLiteBuildAndroidx8664)'=='True' AND !Exists('$(EmguTFLiteNativex8664)')">This package do not contain necessary binary for $(EmguTFLiteLinkTarget). Emgu TF Lite for Android Commercial License is required. x86_64 is targeted, but file $(EmguTFLiteNativex8664) is missing.</EmguTFLiteErrorMessage>
        <EmguTFLiteDeployMessage Condition="'$(EmguTFLiteBuildAndroidx8664)'=='True' AND Exists('$(EmguTFLiteNativex8664)')">$(EmguTFLiteDeployMessage)x86_64 </EmguTFLiteDeployMessage>
      </PropertyGroup>
      <!-- armeabi -->
	  <!--
      <ItemGroup Condition="'$(EmguTFLiteBuildAndroidArmeabi)'=='True' AND Exists('$(EmguTFLiteNativeArmeabi)')">
        <EmbeddedNativeLibrary Condition="'$(EmguTFLiteLinkTarget)'=='Xamarin Android Library'" Include="$(EmguTFLiteNativeArmeabi)">
          <Link>lib\armeabi\libtfliteextern.so</Link>
        </EmbeddedNativeLibrary>
        <AndroidNativeLibrary Condition="'$(EmguTFLiteLinkTarget)'=='Xamarin Android App'" Include="$(EmguTFLiteNativeArmeabi)">
          <Link>lib\armeabi\libtfliteextern.so</Link>
        </AndroidNativeLibrary>
      </ItemGroup>
	  -->
      <!-- armeabi-v7a -->
      <ItemGroup Condition="'$(EmguTFLiteBuildAndroidArmeabiv7a)'=='True' AND Exists('$(EmguTFLiteNativeArmeabiv7a)')">
        <EmbeddedNativeLibrary Condition="'$(EmguTFLiteLinkTarget)'=='Xamarin Android Library'" Include="$(EmguTFLiteNativeArmeabiv7a)">
          <Link>lib\armeabi-v7a\libtfextern.so</Link>
        </EmbeddedNativeLibrary>
        <AndroidNativeLibrary Condition="'$(EmguTFLiteLinkTarget)'=='Xamarin Android App'" Include="$(EmguTFLiteNativeArmeabiv7a)">
          <Link>lib\armeabi-v7a\libtfextern.so</Link>
        </AndroidNativeLibrary>
      </ItemGroup>
      <!-- arm64-v8a -->
      <ItemGroup Condition="'$(EmguTFLiteBuildAndroidArm64v8a)'=='True' AND Exists('$(EmguTFLiteNativeArm64v8a)')">
        <EmbeddedNativeLibrary Condition="'$(EmguTFLiteLinkTarget)'=='Xamarin Android Library'" Include="$(EmguTFLiteNativeArm64v8a)">
          <Link>lib\arm64-v8a\libtfliteextern.so</Link>
        </EmbeddedNativeLibrary>
        <AndroidNativeLibrary Condition="'$(EmguTFLiteLinkTarget)'=='Xamarin Android App'" Include="$(EmguTFLiteNativeArm64v8a)">
          <Link>lib\arm64-v8a\libtfliteextern.so</Link>
        </AndroidNativeLibrary>
      </ItemGroup>
      <!-- x86 -->
      <ItemGroup Condition="'$(EmguTFLiteBuildAndroidx86)'=='True' AND Exists('$(EmguTFLiteNativex86)')">
        <EmbeddedNativeLibrary Condition="'$(EmguTFLiteLinkTarget)'=='Xamarin Android Library'" Include="$(EmguTFLiteNativex86)">
          <Link>lib\x86\libtfliteextern.so</Link>
        </EmbeddedNativeLibrary>
        <AndroidNativeLibrary Condition="'$(EmguTFLiteLinkTarget)'=='Xamarin Android App'" Include="$(EmguTFLiteNativex86)">
          <Link>lib\x86\libtfliteextern.so</Link>
        </AndroidNativeLibrary>
      </ItemGroup>
      <!-- x86_64 -->
      <ItemGroup Condition="'$(EmguTFLiteBuildAndroidx8664)'=='True' AND Exists('$(EmguTFLiteNativex8664)')">
        <EmbeddedNativeLibrary Condition="'$(EmguTFLiteLinkTarget)'=='Xamarin Android Library'" Include="$(EmguTFLiteNativex8664)">
          <Link>lib\x86_64\libtfliteextern.so</Link>
        </EmbeddedNativeLibrary>
        <AndroidNativeLibrary Condition="'$(EmguTFLiteLinkTarget)'=='Xamarin Android App'" Include="$(EmguTFLiteNativex8664)">
          <Link>lib\x86_64\libtfliteextern.so</Link>
        </AndroidNativeLibrary>
      </ItemGroup>
    </When>
    <!-- Windows Form Application -->
    <When Condition="'$(EmguTFLiteLinkTarget)'=='' AND ('$(TargetFrameworkVersion)'=='v2.0' OR '$(TargetFrameworkVersion)'=='v3.0' OR '$(TargetFrameworkVersion)'=='v3.5' OR '$(TargetFrameworkVersion)'=='v4.0' OR '$(TargetFrameworkVersion)'=='v4.5' OR '$(TargetFrameworkVersion)'=='v4.5.1' OR '$(TargetFrameworkVersion)'=='v4.5.2' OR '$(TargetFrameworkVersion)'=='v4.6' OR '$(TargetFrameworkVersion)'=='v4.6.1' OR '$(TargetFrameworkVersion)'=='v4.6.2' OR '$(TargetFrameworkVersion)'=='v4.7' OR '$(TargetFrameworkVersion)'=='v4.7.1' OR '$(TargetFrameworkVersion)'=='v4.7.2')">
      <PropertyGroup>
        <EmguTFLiteLinkTarget>WindowsForms</EmguTFLiteLinkTarget>
        <EmguTFLiteBuildX64 Condition="'$(Platform)'=='AnyCPU' OR '$(Platform)'=='x64'">True</EmguTFLiteBuildX64>
        <EmguTFLiteNativeFileX64>$(EmguTFLiteDir)..\lib\x64\tfliteextern.dll</EmguTFLiteNativeFileX64>
        <EmguTFLiteErrorMessage Condition="'$(EmguTFLiteBuildX64)'=='True' AND !Exists('$(EmguTFLiteNativeFileX64)')">This package do not contain necessary binary for $(EmguTFLiteLinkTarget). X64 is targeted, but file $(EmguTFLiteNativeFileX64) is missing.</EmguTFLiteErrorMessage>
        <EmguTFLiteDeployMessage Condition="'$(EmguTFLiteBuildX64)'=='True' AND Exists('$(EmguTFLiteNativeFileX64)')">$(EmguTFLiteDeployMessage)x64 </EmguTFLiteDeployMessage>
      </PropertyGroup>
      <ItemGroup Condition="'$(EmguTFLiteBuildX64)'=='True' AND Exists('$(EmguTFLiteNativeFileX64)')">
        <Content Include="$(EmguTFLiteDir)..\lib\x64\*.dll">
          <Link>x64\%(RecursiveDir)%(Filename)%(Extension)</Link>
          <CopyToOutputDirectory>PreserveNewest</CopyToOutputDirectory>
        </Content>
      </ItemGroup>
    </When>
    <!-- DotNetCore Application -->
    <When Condition="'$(EmguTFLiteLinkTarget)'=='' AND ('$(TargetFramework)'=='netstandard1.4')">
      <PropertyGroup>
        <EmguTFLiteLinkTarget>DotNetCore</EmguTFLiteLinkTarget>
      </PropertyGroup>
    </When>
  </Choose>
  <Target Name="EmguTFLitePackageBuildImports" BeforeTargets="PrepareForBuild">
    <!-- <Error Condition="'$(EmguTFLiteLinkTarget)'==''" Text="Emgu TF Lite is not able to detect the project type, please use the pre-compiled Emgu.TF.Lite.World dll or send a bug report to support@emgu.com" /> -->
    <Message Condition="'$(EmguTFLiteLinkTarget)'!=''" Text="Emgu TF Lite shared project compiling against $(EmguTFLiteLinkTarget)" Importance="High" />
    <Error Text="'$(EmguTFLiteErrorMessage)'" Condition="'$(EmguTFLiteErrorMessage)'!=''" />
    <Message Text="Emgu TF Lite Compiling with $(EmguTFLiteDeployMessage)binary" Condition="'$(EmguTFLiteDeployMessage)'!=''" Importance="High" />
    <Message Text="No native binary is deployed by the Emgu.TF shared project." Condition="'$(EmguTFLiteDeployMessage)'==''" Importance="High" />
  </Target>
</Project>